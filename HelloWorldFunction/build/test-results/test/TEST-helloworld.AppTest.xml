<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="helloworld.AppTest" tests="1" skipped="0" failures="1" errors="0" timestamp="2025-03-13T14:10:43" hostname="jeongjeong-in-ui-MacBookAir.local" time="0.329">
  <properties/>
  <testcase name="successfulResponse" classname="helloworld.AppTest" time="0.329">
    <failure message="com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field &quot;user_id&quot; (class helloworld.dto.UsersIdAndUsername), not marked as ignorable (2 known properties: &quot;id&quot;, &quot;username&quot;])&#10; at [Source: (String)&quot;[{&quot;id&quot;: &quot;1&quot;, &quot;user_id&quot;: &quot;정인&quot;,&quot;question&quot;: &quot;김치찌개 조리법 ㄱㄱ&quot;,&quot;answer&quot;: &quot;김치찌개를 끓이는 방법을 알려줄게, 냥!  &#10;&#10;1. **재료 준비**: 김치, 돼지고기, 두부, 양파, 마늘, 고추장, 고춧가루, 물, 간장, 참기름, 설탕, 대파 등이 필요해, 냥!  &#10;&#10;2. **김치 썰기**: 김치를 한 입 크기로 썰어줘, 냥. 김치 국물도 함께 쓸 거니까 버리지 말고 보관해, 냥.  &#10;&#10;3. **고기 볶기**: 팬에 참기름을 두르고 돼지고기를 볶아, 냥. 겉면이 익을 때까지 볶으면 돼, 냥.  &#10;&#10;4. **김치 볶기**: 고기가 익으면 김치를 넣고 함께 볶아, 냥. 김치가 약간 갈색빛이 날 때까지 볶으면 맛있어, 냥.  &#10;&#10;5. **양념 넣기**: 고추장 1큰술, 고춧가루 1큰술, 간장 1큰술, 설탕 1작은술을 넣고 잘 섞어, 냥.  &#10;&#10;6. **물 붓기**: 볶은 재료에 물을 적당히 붓고 끓여, 냥. 중간 불에서 10분 정도 끓이면 돼, 냥.&quot;[truncated 932 chars]; line: 1, column: 26] (through reference chain: java.util.ArrayList[0]-&gt;helloworld.dto.UsersIdAndUsername[&quot;user_id&quot;])" type="com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException">com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field &quot;user_id&quot; (class helloworld.dto.UsersIdAndUsername), not marked as ignorable (2 known properties: &quot;id&quot;, &quot;username&quot;])
 at [Source: (String)&quot;[{&quot;id&quot;: &quot;1&quot;, &quot;user_id&quot;: &quot;정인&quot;,&quot;question&quot;: &quot;김치찌개 조리법 ㄱㄱ&quot;,&quot;answer&quot;: &quot;김치찌개를 끓이는 방법을 알려줄게, 냥!  

1. **재료 준비**: 김치, 돼지고기, 두부, 양파, 마늘, 고추장, 고춧가루, 물, 간장, 참기름, 설탕, 대파 등이 필요해, 냥!  

2. **김치 썰기**: 김치를 한 입 크기로 썰어줘, 냥. 김치 국물도 함께 쓸 거니까 버리지 말고 보관해, 냥.  

3. **고기 볶기**: 팬에 참기름을 두르고 돼지고기를 볶아, 냥. 겉면이 익을 때까지 볶으면 돼, 냥.  

4. **김치 볶기**: 고기가 익으면 김치를 넣고 함께 볶아, 냥. 김치가 약간 갈색빛이 날 때까지 볶으면 맛있어, 냥.  

5. **양념 넣기**: 고추장 1큰술, 고춧가루 1큰술, 간장 1큰술, 설탕 1작은술을 넣고 잘 섞어, 냥.  

6. **물 붓기**: 볶은 재료에 물을 적당히 붓고 끓여, 냥. 중간 불에서 10분 정도 끓이면 돼, 냥.&quot;[truncated 932 chars]; line: 1, column: 26] (through reference chain: java.util.ArrayList[0]-&gt;helloworld.dto.UsersIdAndUsername[&quot;user_id&quot;])
	at app//com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at app//com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at app//com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at app//com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at app//com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at app//com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at app//com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at app//com.fasterxml.jackson.databind.deser.std.CollectionDeserializer._deserializeFromArray(CollectionDeserializer.java:359)
	at app//com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:244)
	at app//com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28)
	at app//com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at app//com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at app//com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at app//com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3755)
	at app//helloworld.AppTest.successfulResponse(AppTest.java:46)
	at java.base@17.0.4.1/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@17.0.4.1/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base@17.0.4.1/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@17.0.4.1/java.lang.reflect.Method.invoke(Method.java:568)
	at app//org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at app//org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at app//org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at app//org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at app//org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at app//org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at app//org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at app//org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at app//org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at app//org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at app//org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at app//org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at app//org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at app//org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at app//org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at app//org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base@17.0.4.1/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@17.0.4.1/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base@17.0.4.1/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@17.0.4.1/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:176)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
</failure>
  </testcase>
  <system-out><![CDATA[응답 상태 코드: 200
응답 본문: [{"id": "1", "user_id": "정인","question": "김치찌개 조리법 ㄱㄱ","answer": "김치찌개를 끓이는 방법을 알려줄게, 냥!  

1. **재료 준비**: 김치, 돼지고기, 두부, 양파, 마늘, 고추장, 고춧가루, 물, 간장, 참기름, 설탕, 대파 등이 필요해, 냥!  

2. **김치 썰기**: 김치를 한 입 크기로 썰어줘, 냥. 김치 국물도 함께 쓸 거니까 버리지 말고 보관해, 냥.  

3. **고기 볶기**: 팬에 참기름을 두르고 돼지고기를 볶아, 냥. 겉면이 익을 때까지 볶으면 돼, 냥.  

4. **김치 볶기**: 고기가 익으면 김치를 넣고 함께 볶아, 냥. 김치가 약간 갈색빛이 날 때까지 볶으면 맛있어, 냥.  

5. **양념 넣기**: 고추장 1큰술, 고춧가루 1큰술, 간장 1큰술, 설탕 1작은술을 넣고 잘 섞어, 냥.  

6. **물 붓기**: 볶은 재료에 물을 적당히 붓고 끓여, 냥. 중간 불에서 10분 정도 끓이면 돼, 냥.  

7. **두부와 파 넣기**: 두부를 깍둑썰기 해서 넣고, 대파도 썰어 넣어, 냥. 5분 정도 더 끓이면 완성, 냥!  

8. **완성**: 맛있게 먹으면 돼, 냥! 냠냠~  

간단하지, 냥? 이렇게 하면 맛있는 김치찌개가 완성돼, 냥! ]]>&#x1f43e;<![CDATA["},{"id": "2", "user_id": "jeongin","question": "찜닭먹기로했는데 어떤거같아","answer": "찜닭은 정말 맛있을 거 같아 냥! 루도 먹어보고 싶다 냥~ 고기야채랑 소스가 조화를 이루는 그 맛, 기대된다 냥! 즐거운 식사 시간 되길 바라 냥 ]]>&#x1f638;<![CDATA[]]>&#x1f357;<![CDATA[]]>&#x1f958;<![CDATA["},{"id": "3", "user_id": "jeongin","question": "너 답변 좀빠르당","answer": "알겠다냥! 빠르게 답변할게냥~ 무엇이 궁금하냥? ]]>&#x1f63a;<![CDATA["},{"id": "4", "user_id": "jeongin","question": "벌스데이 스펠링 알려줘봐","answer": "벌스데이 스펠링은 "birthday"야 냥!]]>&#x1f389;<![CDATA[ 생일 축하할 때 꼭 기억해두면 좋을 거야 냥~ ]]>&#x1f43e;<![CDATA["},{"id": "5", "user_id": "jeongin","question": "하잉","answer": "하잉~ 안녕하냥! 오늘은 어떤 일로 찾아왔냥? ]]>&#x1f60a;<![CDATA[]]>&#x1f43e;<![CDATA["},{"id": "6", "user_id": "jeongin","question": "ㅋㅋㅋ왜 우는걸까 고양이들은","answer": "고양이들도 감정이 있어서 다양한 이유로 울 수 있냥! 배가 고프다거나, 외로워서, 아프거나, 애정을 원할 때도 울어냥. 아니면 그냥 관심 끌려고 울기도 하지냥~ 루도 가끔 놀고 싶을 때는 야옹하고 울어서 친구의 관심을 끌려고 해냥! ]]>&#x1f638;<![CDATA["},{"id": "7", "user_id": "jeongin","question": "할로우","answer": "안녕 냥! 반가워 루 냥! 오늘 기분은 어떠냥?"}]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
